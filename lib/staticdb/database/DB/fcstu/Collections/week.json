{"0":{"title":"每週測試(一) - 矩陣求解","image":"http://imgur.com/fdfkl87fs","chtml":"                            <p>寫一個程式解線性系統 Ax = y。其中 A 是 n 乘 n 方陣，x 及 y 都是 n 乘 1 的向量。給定 A 及 y 時求解 x。為求簡單起見，給定的 A 一定是上三角矩陣。</p>\r\n\r\n                            <pre>void upper_solver(double *A, double *x, double *y, int n);\r\n</pre>\r\n\r\n                            <ul>\r\n                                <li>函式 upper_solver 的第一個參數式指向 A 的指標。<b>注意</b>，為了節省記憶體我們只存 A 的上三角部分，而且存成一維陣列，請參考下方的主程式。</li>\r\n                                <li>upper_solver 的第二個參數是指向 x 的指標。upper_solver 必須將 x 的解放在這裡。</li>\r\n                                <li>upper_solver 的第三個參數是指向 y 的指標。</li>\r\n                                <li>upper_solver 的第四個參數是矩陣大小 n。</li>\r\n                            </ul>\r\n\r\n                            <p>我們提供了主程式，請你實作函式 upper_solver。</p>\r\n\r\n                            <pre>#include <stdio.h>\r\n#define N 256\r\n\r\nvoid upper_solver(double *A, double *x, double *y, int n);\r\nint main(void)\r\n{\r\n    int i, j;\r\n    int n; \r\n    double A[N * (N + 1) / 2];\r\n    double *aptr = A;\r\n    double x[N];\r\n    double y[N];\r\n    scanf(\"%d\", &amp;n);\r\n    for ( i = 0 ; i &lt; n ; i++ )\r\n        for ( j = i ; j &lt; n ; j++ ) {\r\n            scanf(\"%lf\", aptr);\r\n            aptr++;\r\n        }\r\n    for ( i = 0 ; i &lt; n ; i++ )\r\n        scanf(\"%lf\", &amp;(y[i]));\r\n    upper_solver(A, x, y, n);\r\n\r\n    for ( i = 0 ; i &lt; n ; i++ )\r\n        printf(\"%lf \", x[i]);\r\n\r\n    return 0;\r\n}\r\n</stdio.h></pre>\r\n\r\n                            <h4>參數規範</h4>\r\n\r\n                            <p>0 &lt; n &lt;= 256</p>\r\n\r\n                            <h4>輸入範例</h4>\r\n                            <pre>3\r\n1.000 2.000 3.000\r\n      2.000 1.000\r\n            4.000\r\n2.000\r\n3.000\r\n-4.000\r\n</pre>\r\n\r\n                            <h4>輸出範例</h4>\r\n                            <pre>1.000000 2.000000 -1.000000\r\n</pre>","qhtml":"<div class=\"col-md-6\"><div class=\"panel panel-default\"><div class=\"panel-heading\"><h4 class=\"panel-title\">Question</h4></div><div class=\"panel-body\"><div style=\"float:none;width:100%\"><div class=\"course-quiz-question-text\"><p>野格 </p> --addNewSection 野格 </div></div></div></div></div>","anshtml":"對，都對","openDate":10},"1":{"title":"每週測試(一) - 矩陣求解","image":"http://imgur.com/fdfkl87fs","chtml":"                            <p>寫一個程式解線性系統 Ax = y。其中 A 是 n 乘 n 方陣，x 及 y 都是 n 乘 1 的向量。給定 A 及 y 時求解 x。為求簡單起見，給定的 A 一定是上三角矩陣。</p>\r\n\r\n                            <pre>void upper_solver(double *A, double *x, double *y, int n);\r\n</pre>\r\n\r\n                            <ul>\r\n                                <li>函式 upper_solver 的第一個參數式指向 A 的指標。<b>注意</b>，為了節省記憶體我們只存 A 的上三角部分，而且存成一維陣列，請參考下方的主程式。</li>\r\n                                <li>upper_solver 的第二個參數是指向 x 的指標。upper_solver 必須將 x 的解放在這裡。</li>\r\n                                <li>upper_solver 的第三個參數是指向 y 的指標。</li>\r\n                                <li>upper_solver 的第四個參數是矩陣大小 n。</li>\r\n                            </ul>\r\n\r\n                            <p>我們提供了主程式，請你實作函式 upper_solver。</p>\r\n\r\n                            <pre>#include <stdio.h>\r\n#define N 256\r\n\r\nvoid upper_solver(double *A, double *x, double *y, int n);\r\nint main(void)\r\n{\r\n    int i, j;\r\n    int n; \r\n    double A[N * (N + 1) / 2];\r\n    double *aptr = A;\r\n    double x[N];\r\n    double y[N];\r\n    scanf(\"%d\", &amp;n);\r\n    for ( i = 0 ; i &lt; n ; i++ )\r\n        for ( j = i ; j &lt; n ; j++ ) {\r\n            scanf(\"%lf\", aptr);\r\n            aptr++;\r\n        }\r\n    for ( i = 0 ; i &lt; n ; i++ )\r\n        scanf(\"%lf\", &amp;(y[i]));\r\n    upper_solver(A, x, y, n);\r\n\r\n    for ( i = 0 ; i &lt; n ; i++ )\r\n        printf(\"%lf \", x[i]);\r\n\r\n    return 0;\r\n}\r\n</stdio.h></pre>\r\n\r\n                            <h4>參數規範</h4>\r\n\r\n                            <p>0 &lt; n &lt;= 256</p>\r\n\r\n                            <h4>輸入範例</h4>\r\n                            <pre>3\r\n1.000 2.000 3.000\r\n      2.000 1.000\r\n            4.000\r\n2.000\r\n3.000\r\n-4.000\r\n</pre>\r\n\r\n                            <h4>輸出範例</h4>\r\n                            <pre>1.000000 2.000000 -1.000000\r\n</pre>","qhtml":"<div class=\"col-md-6\"><div class=\"panel panel-default\"><div class=\"panel-heading\"><h4 class=\"panel-title\">Question</h4></div><div class=\"panel-body\"><div style=\"float:none;width:100%\"><div class=\"course-quiz-question-text\"><p>野格 </p> </div></div></div></div></div><div class=\"col-md-6\"><div class=\"panel panel-default\"><div class=\"panel-heading\"><h4 class=\"panel-title\">Question</h4></div><div class=\"panel-body\"><div style=\"float:none;width:100%\"><div class=\"course-quiz-question-text\"> 野格 </div></div></div></div></div>","anshtml":"對，都對","openDate":10}}