{"0":{"title":"每週測試(一) - 矩陣求解","image":"http://imgur.com/fdfkl87fs","chtml":"\r\n                            <p>寫一個程式解線性系統 Ax = y。其中 A 是 n 乘 n 方陣，x 及 y 都是 n 乘 1 的向量。給定 A 及 y 時求解 x。為求簡單起見，給定的 A 一定是上三角矩陣。</p>\r\n\r\n                            <pre>void upper_solver(double *A, double *x, double *y, int n);\r\n</pre>\r\n\r\n                            <ul>\r\n                                <li>函式 upper_solver 的第一個參數式指向 A 的指標。<b>注意</b>，為了節省記憶體我們只存 A 的上三角部分，而且存成一維陣列，請參考下方的主程式。</li>\r\n                                <li>upper_solver 的第二個參數是指向 x 的指標。upper_solver 必須將 x 的解放在這裡。</li>\r\n                                <li>upper_solver 的第三個參數是指向 y 的指標。</li>\r\n                                <li>upper_solver 的第四個參數是矩陣大小 n。</li>\r\n                            </ul>\r\n\r\n                            <p>我們提供了主程式，請你實作函式 upper_solver。</p>\r\n\r\n                            <pre>#include <stdio.h>\r\n#define N 256\r\n\r\nvoid upper_solver(double *A, double *x, double *y, int n);\r\nint main(void)\r\n{\r\n    int i, j;\r\n    int n; \r\n    double A[N * (N + 1) / 2];\r\n    double *aptr = A;\r\n    double x[N];\r\n    double y[N];\r\n    scanf(\"%d\", &amp;n);\r\n    for ( i = 0 ; i &lt; n ; i++ )\r\n        for ( j = i ; j &lt; n ; j++ ) {\r\n            scanf(\"%lf\", aptr);\r\n            aptr++;\r\n        }\r\n    for ( i = 0 ; i &lt; n ; i++ )\r\n        scanf(\"%lf\", &amp;(y[i]));\r\n    upper_solver(A, x, y, n);\r\n\r\n    for ( i = 0 ; i &lt; n ; i++ )\r\n        printf(\"%lf \", x[i]);\r\n\r\n    return 0;\r\n}\r\n</stdio.h></pre>\r\n\r\n                            <h4>參數規範</h4>\r\n\r\n                            <p>0 &lt; n &lt;= 256</p>\r\n\r\n                            <h4>輸入範例</h4>\r\n                            <pre>3\r\n1.000 2.000 3.000\r\n      2.000 1.000\r\n            4.000\r\n2.000\r\n3.000\r\n-4.000\r\n</pre>\r\n\r\n                            <h4>輸出範例</h4>\r\n                            <pre>1.000000 2.000000 -1.000000\r\n</pre>","qhtml":"<h4>輸入</h4>\r\n\r\n                                <pre>8\r\n-5.900 -3.000 -8.800 -8.100  9.000 -4.700  5.000  3.200\r\n       -7.400  6.800 -7.000 -2.300  2.900 -5.100  1.800\r\n               3.500  5.000 -8.500 -7.600 -1.200 -9.000\r\n                      7.700  8.500  6.400 -3.700  9.800\r\n                             9.300 -7.800 -7.000  6.000\r\n                                   -2.100  2.100  8.100\r\n                                           8.600 -7.100\r\n                                                  9.600\r\n-226.910\r\n -22.970\r\n 142.980\r\n -63.700\r\n-165.660\r\n -91.830\r\n  68.160\r\n -92.160\r\n</pre>\r\n\r\n                                <h4>輸出</h4> -addNewSection_V <h4>輸入</h4>\r\n\r\n                                <pre>12\r\n-6.000 -7.000 -2.400  8.900  1.600 -2.000 -7.200 -4.600 -6.900 -5.000  8.000  7.800\r\n       -4.800  9.100  9.700 -9.000  5.600  7.500 -9.000 -4.000 -2.100 -8.300  3.500\r\n               7.000 -2.900  8.500  6.800  4.900 -7.200  5.500 -7.000  4.600 -1.300\r\n                      8.000  4.800  2.000  5.900  4.100  3.600  9.900  7.100 -5.900\r\n                            -5.000  3.200  7.200 -2.500 -7.300 -2.900 -7.200  6.400\r\n                                    3.900  4.500  2.100 -2.200 -9.800 -6.300  1.800\r\n                                           3.000 -8.000 -4.000  2.100 -4.700 -3.500\r\n                                                  2.800 -3.000  6.800  9.900  2.800\r\n                                                         4.100 -3.500  3.900 -4.900\r\n                                                               -9.700 -6.100 -9.700\r\n                                                                       2.000 -6.100\r\n                                                                             -9.800\r\n155.340\r\n 41.640\r\n109.020\r\n176.980\r\n-51.810\r\n 56.190\r\n-65.950\r\n 50.660\r\n 54.790\r\n 51.890\r\n 44.920\r\n 50.960\r\n</pre>\r\n\r\n                                <h4>輸出</h4> </div>1<div> <h4>輸入</h4>\r\n\r\n                                <pre>15\r\n7.300  5.900 -3.600  6.900  9.600  8.600 -1.400  3.500 -1.300 -2.000  6.700  4.400  7.800  3.600 -9.000\r\n      -8.300 -5.600 -7.600 -6.700  6.700 -8.000  5.100 -7.400 -4.300  2.200 -6.600 -5.800  9.100  4.400\r\n              3.100 -5.100 -1.900 -7.600  7.400 -9.700  8.100  4.300  7.600 -5.000  3.300 -2.300  4.400\r\n                     9.100  1.400 -7.000  8.300 -5.000  3.100  9.000  9.100 -1.000 -2.300  9.100  7.700\r\n                           -7.900  5.600  2.300 -8.500  3.400  2.000  3.200 -7.800  3.300 -5.900 -1.000\r\n                                  -2.000  3.600 -8.400  8.000 -8.000 -1.700 -4.600  5.800 -9.600 -7.500\r\n                                          5.300  7.300  8.600 -2.600 -2.500  6.100 -4.000  3.000 -7.000\r\n                                                 2.500  9.000  6.200  2.900 -5.200  2.900  4.400 -3.900\r\n                                                        1.200  1.800  7.100 -5.600  4.900  1.900  6.300\r\n                                                              -2.300  7.100  5.200  9.700  1.600  4.300\r\n                                                                     -7.700  5.100  7.400 -6.900 -3.200\r\n                                                                            -5.000  1.200  3.200 -6.000\r\n                                                                                   -8.600 -3.400  2.000\r\n                                                                                          -7.500  2.200\r\n                                                                                                 -3.000\r\n 38.100\r\n-94.410\r\n-20.740\r\n 35.480\r\n  4.440\r\n  4.890\r\n 39.430\r\n 80.660\r\n  4.650\r\n-44.510\r\n 17.650\r\n109.420\r\n-70.040\r\n-39.520\r\n 27.300\r\n</pre>\r\n\r\n                                <h4>輸出</h4>","anshtml":"對，都對","openDate":10}}